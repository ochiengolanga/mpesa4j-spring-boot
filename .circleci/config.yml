version: 2 # use CircleCI 2.0
jobs: # a collection of steps
  build:
    working_directory: /tmp
    environment:
      # Configure the JVM and Gradle to avoid OOM errors
      _JAVA_OPTIONS: "-Xmx3g"
      GRADLE_OPTS: "-Dorg.gradle.daemon=false -Dorg.gradle.workers.max=2"
    docker: # run the steps with Docker
      - image: circleci/openjdk:11.0.3-jdk-stretch # ...with this image as the primary container; this is where all `steps` will run
    steps: # a collection of executable commands
      - checkout # check out source code to working directory
      # Read about caching dependencies: https://circleci.com/docs/2.0/caching/
      - restore_cache:
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - restore_cache:
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - run:
          name: Run mpesa4j-springboot-autoconfigure tests
          command: |
            ./gradlew -x mpesa4j-spring-boot-starter:test -x mpesa4j-spring-boot-sample:test test
      - save_cache:
          paths:
            - ~/.gradle/wrapper
          key: v1-gradle-wrapper-{{ checksum "gradle/wrapper/gradle-wrapper.properties" }}
      - save_cache:
          paths:
            - ~/.gradle/caches
          key: v1-gradle-cache-{{ checksum "build.gradle" }}
      - store_test_results:
          # Upload test results for display in Test Summary: https://circleci.com/docs/2.0/collect-test-data/
          path: /tmp/build/test-results/test
      - store_artifacts: # Upload test results for display in Artifacts: https://circleci.com/docs/2.0/artifacts/
          path: /tmp/build/test-results/test
          when: always
      - run:
          name: Assemble JARs
          command: |
            ./gradlew -x mpesa4j-spring-boot-starter:assemble -x mpesa4j-spring-boot-sample:assemble assemble
#      - run:
#          name: Upload JARs to BinTray
#          command: |
#            ./gradlew bintrayUpload
      - store_artifacts:
          path: /tmp/build/libs
workflows:
  version: 2
  workflow:
    jobs:
      - build